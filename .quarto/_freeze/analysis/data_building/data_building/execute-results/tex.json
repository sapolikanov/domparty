{
  "hash": "be783327ff86dadbdb3e9f2e26c1d217",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Building\"\nformat: \n  pdf:\n    fig-pos: \"H\"\n    fontsize: 11pt\n    highlight-style: breezedark\n    fig-width: 7\n    fig-height: 5\n    include-in-header:\n      - text: |\n          \\addtokomafont{disposition}{\\rmfamily} \n          \\AddToHook{env/Highlighting/begin}{\\scriptsize} \n          \\usepackage{float} \n          \\usepackage[backend = biber, style = apa]{biblatex}\n          \\addbibresource{../../bibliography/domparty.bib}\nexecute: \n  echo: true\n  warning: false\n  error: false\n  message: false\n---\n\n\n\n\nI start with reading in the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparty_class <- read_excel(here(\"data\", \"data_raw\", \"partyreg.xlsx\"))\ncolonial <- read_csv(here(\"data\", \"data_raw\", \"COLDAT_colonies.csv\"))\nvdem <- readRDS(here(\"data\", \"data_raw\", \"V-Dem-CY-Full+Others-v10.rds\"))\nepr <- read_csv(here(\"data\", \"data_raw\", \"EPR.csv\"))\ndpi <- read_dta(here(\"data\", \"data_raw\", \"DPI2020.dta\"))\nvparty <- read_rds(here(\"data\", \"data_raw\", \"V-Dem-CPD-Party-V2.rds\"))\nwb_oil <- read_csv(here(\"data\", \"data_raw\", \n                        \"API_NY.GDP.PETR.RT.ZS_DS2_en_csv_v2_2446738.csv\"))\n```\n:::\n\n\nCreate a character vector of country-year pairs for subsetting.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncy <- str_c(party_class$ccodecow, party_class$year, sep = \"_\")\n```\n:::\n\n\nI construct dummies for the colonial legacies of sub-Saharan African countries from the Colonial Dates dataset \\parencite{becker_colonial_2019}.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncol_legacy <- colonial |> \n  mutate(ccodecow = countryname(country, destination = \"cown\", warn = F)) |> \n  filter(ccodecow %in% party_class$ccodecow) |> \n  reframe(ccodecow, col.britain, col.france,\n          col.other = if_else((col.britain == 0 & col.france == 0)\n                              & (col.belgium == 1 | col.germany == 1\n                                 | col.italy == 1 | col.netherlands == 1\n                                 | col.portugal == 1 | col.spain == 1), 1, 0),\n          col.none = if_else(col.other == 0 & col.britain == 0\n                             & col.france == 0, 1, 0),\n          col.type = case_when(col.britain == 1 & col.france == 0 \n                               & col.other == 0 ~ \"Britain\",\n                               col.france == 1 & col.britain == 0 \n                               & col.other == 0 ~ \"France\",\n                               col.other == 1 & col.britain == 0 \n                               & col.france == 0 ~ \"Other\",\n                               col.none == 1 ~ \"None\",\n                               .default = \"Mixed\"))\n\nggplot(col_legacy, aes(x = col.type)) +\n  geom_bar(fill = \"grey60\", width = 0.75) +\n  geom_text(aes(label = after_stat(count)), stat = \"count\", vjust = 2) + \n  labs(title = \"Colonial Legacies of Sub-Saharan African Countries\",\n       subtitle = paste0(\"N = \", sum(!is.na(col_legacy$col.type)), \" of \", \n                         length(col_legacy$col.type), \n                         \" possible countries in the sample.\"),\n       caption = \n         \"\\nsource: Colonial Dates Dataset (COLDAT), Becker et al. (2019)\",\n       x = \"\\nColonial Power\",\n       y = \"Number of Countries\\n\")\n```\n\n::: {.cell-output-display}\n![](data_building_files/figure-pdf/modify colonial dates data-1.pdf)\n:::\n:::\n\n\nThe result is that some countries had colonial histories with both Britain and France, either of those, a different metropole, or were not colonized at all.\n\nParty system institutionalization data comes from V-Dem v10 (march 2020) \\parencite{coppedge_v-dem_2020}. \n\n\n::: {.cell}\n\n```{.r .cell-code}\npsi <- vdem |> \n  select(country_name, ccodecow = COWcode, year, v2xps_party) |> \n  mutate(v2xps_party_mean = if_else(is.na(v2xps_party)\n                                    & str_c(ccodecow, year, sep = \"_\") %in% cy,\n                                    round(mean(v2xps_party[year >= 2013\n                                                           & year <= 2018], \n                                         na.rm = T), 3), v2xps_party),\n         v2xos_party_next = if_else(is.na(v2xps_party)\n                                    & str_c(ccodecow, year, sep = \"_\") %in% cy,\n                                    lead(v2xps_party, 1), v2xps_party)) |> \n  filter(str_c(ccodecow, year, sep = \"_\") %in% cy)\n\nggplot(psi, aes(x = v2xps_party_mean)) +\n  geom_density() +\n  geom_dotplot(fill = \"grey60\", binwidth = 0.03) +\n  labs(title = \n         \"Party System Institutionalization in Sub-Saharan African Countries\",\n       caption = \"\\nsource: V-Dem v10 (march 2020), Coppedge et al. (2020)\",\n       subtitle = paste0(\"N = \", sum(!is.na(psi$v2xps_party_mean)), \" of \", \n                         length(psi$v2xps_party_mean), \n                         \" possible countries in the sample. For \",\n                         sum(!is.na(psi$v2xps_party_mean))\n                         - sum(!is.na(psi$v2xps_party)),\n                         \" countries with missing PSI for the\\n\",\n                         \"election year are imputed with the mean of the PSI \",\n                         \"index for 2013-2018.\\n\"),\n       x = \"\\nPSI Index\",\n       y = \"Density\\n\")\n```\n\n::: {.cell-output-display}\n![](data_building_files/figure-pdf/modify PSI data-1.pdf)\n:::\n:::\n\n\nThere are two instances when the PSI index is not recorded by V-Dem in the delineated geographical and temporal scope: Mali in 2013 and Guinea in 2013. I fill these with the mean of the PSI index for these countries for the years 2013-2018. The decision is aimed at minimizing missing values in an already very small sample. This may be suboptimal, so I also provide a sensitivity analysis to this choice. I compare the mean solution with imputing the next value or discarding the observations altogether.\n\nThe data on the level of democracy also comes from V-Dem v10 \\parencite{coppedge_v-dem_2020}. I use the V-Dem polyarchy measure.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndem <- vdem |> \n  select(ccodecow = COWcode, year, v2x_polyarchy) |> \n  filter(str_c(ccodecow, year, sep = \"_\") %in% cy)\n\nggplot(dem, aes(x = v2x_polyarchy)) +\n  geom_density() +\n  geom_dotplot(fill = \"grey60\", binwidth = 0.03) +\n  labs(title = \n         \"Democracy in Sub-Saharan African Countries\",\n       caption = \"\\nsource: V-Dem v10 (march 2020), Coppedge et al. (2020)\",\n       subtitle = paste0(\"N = \", sum(!is.na(dem$v2x_polyarchy)), \" of \", \n                         length(dem$v2x_polyarchy), \n                         \" possible countries in the sample.\\n\"),\n       x = \"\\nPolyarchy Index\",\n       y = \"Density\\n\")\n```\n\n::: {.cell-output-display}\n![](data_building_files/figure-pdf/unnamed-chunk-6-1.pdf)\n:::\n:::\n\n\nI use Ethnic Power Relations core dataset to construct a measure of ethno-linguistic\nfragmentation (ELF) \\parencite{vogt_integrating_2015}. The ELF index is a measure of the probability that two randomly selected individuals in a country belong to different ethno-linguistic groups. The calculation is straightforward: \n\n$$ELF_i = 1 - \\sum_{j = 1}^{K}s_j^2$$\n\nwhere for to get the ELF index for country $i$, I deduct from 1 the sum of squared proportions $s$ of ethnic groups $j$ across $K$ groups in a country.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelf <- epr |> \n  mutate(ccodecow = countryname(statename, destination = \"cown\")) |>\n  group_by(statename, ccodecow, from, to) |> \n  summarize(elf = 1 - sum(size^2)) |> \n  mutate(year = list(seq(from, to))) |> \n  unnest(year) |> \n  ungroup() |> \n  select(-from, -to) |> \n  full_join(select(party_class, ccodecow, year)) |> \n  arrange(ccodecow, year) |> \n  group_by(ccodecow) |> \n  mutate(elf_fill = if_else(is.na(elf), lag(elf, 1), elf)) |> \n  right_join(select(party_class, ccodecow, year)) |> \n  ungroup()\n\nggplot(elf, aes(x = elf_fill)) +\n  geom_density() +\n  geom_dotplot(fill = \"grey60\", binwidth = 0.04) +\n  labs(title = \"Ethno-linguistic fragmentation in Sub-Saharan African Countries\",\n       subtitle = paste0(\"N = \", sum(!is.na(elf$elf_fill)), \", of \", \n                         length(elf$elf_fill), \" possible countries in the sample.\\nFor \", \n                         sum(!is.na(elf$elf_fill)) - sum(!is.na(elf$elf)),\n                         \" countries the ELF index for 2018 is imputed with the 2017 value.\\n\"),\n       caption = \"\\nsource: Ethnic Power Relations Dataset (EPR), Vogt et al. (2015)\",\n       x = \"\\nELF Index\",\n       y = \"Density\\n\")\n```\n\n::: {.cell-output-display}\n![](data_building_files/figure-pdf/modify EPR data-1.pdf)\n:::\n:::\n\n\nData on the electoral rules for the lower house of the national legislature comes from the Database of Political Institutions (DPI) \\parencite{patrick_new_2010}. I focus on the type of electoral system used in the most recent election year. The data is coded as 0 for proportional representation and 1 for plurality.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhousesys <- dpi |> \n  select(countryname, ifs, year, housesys) |> \n  mutate(ccodecow_1 = countrycode(ifs, origin = \"iso3c\", destination = \"cown\"),\n         ccodecow_2 = countryname(countryname, destination = \"cown\"),\n         ccodecow = case_when(ccodecow_1 == ccodecow_2 ~ ccodecow_1,\n                              is.na(ccodecow_1) ~ ccodecow_2,\n                              is.na(ccodecow_2) ~ ccodecow_1,\n                              !is.na(ccodecow_1) \n                              & !is.na(ccodecow_2) ~ ccodecow_1),\n         housesys = factor(if_else(housesys == -999, NA, housesys),\n                           levels = c(0, 1), \n                           labels = c(\"Proportional\",\n                                      \"Plural\"))) |> \n  filter(str_c(ccodecow, year, sep = \"_\") %in% cy) |> \n  right_join(select(party_class, ccodecow, year))\n\nggplot(housesys, aes(x = housesys)) +\n  geom_bar(fill = \"grey60\", width = 0.75) + \n  labs(title = \"Type of Political Institutions in Sub-Saharan African Countries\",\n       subtitle = paste0(\"N = \", sum(!is.na(housesys$housesys)), \" of \", \n                         length(housesys$housesys), \n                         \" possible countries in the sample.\\n\"),\n       caption = \"\\nsource: Database of Political Institutions (DPI), Arel-Bundock (2020)\",\n       x = \"\\nType of Political Institutions\",\n       y = \"Number of countries\\n\")\n```\n\n::: {.cell-output-display}\n![](data_building_files/figure-pdf/modify political institutions data-1.pdf)\n:::\n:::\n\n\nThere are around twice as many countries with plurality as with with proportional representation in the sample. For 4 countries data is unavailable. For Sao Tome and Principe and the Seychelles, the project does not collect data, and for Guinea and Sudan, the data is missing in source. \n\nThe data on effective number of parties comes from the V-Party dataset. I calculate both ENPP (effective number of parliamentary parties) and ENEP (effective number of presidential candidates) indices. The ENPP index is calculated as:\n\n$$ENPP_i = \\frac{1}{\\sum_{p = 1}^{L}ss_p^2}$$\n\nwhich is the inverse of the sum of squared seat shares of parties in the lower house of the national legislature and where $ss_p$ is the seat share of party $p$. The ENEP index is calculated as: \n\n$$ENEP_i = \\frac{1}{\\sum_{p = 1}^{L}sv_p^2}$$\n\nwhich is the inverse of the sum of squared vote shares of presidential candidates, with $sv_p$ being that share.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenp <- vparty |> \n  select(country_name, year, ccodecow = COWcode, v2paseatshare,\n         v2pavote) |>\n  filter(str_c(ccodecow, year, sep = \"_\") %in% cy) |>\n  mutate(across(c(v2paseatshare, v2pavote), ~ ./100)) |>\n  group_by(ccodecow, year) |> \n  summarize(enpp = 1/sum(v2paseatshare^2, na.rm = T),\n            enep = 1/sum(v2pavote^2, na.rm = T),\n            enep = if_else(is.infinite(enep), NA, enep),\n            .groups = \"drop\") |>\n  right_join(select(party_class, ccodecow, year))\n\nenp |> \n  rename(ENPP = enpp, ENEP = enep) |>\n  pivot_longer(cols = c(\"ENPP\", \"ENEP\")) |> \n  ggplot(aes(x = value, color = name)) +\n    geom_density() +\n    geom_dotplot(aes(fill = name), binwidth = 0.2, binpositions = \"all\", alpha = 0.75) +\n    scale_fill_manual(values = c(\"#00224D\", \"#FF204E\")) +\n    scale_color_manual(values = c(\"#00224D\", \"#FF204E\")) +\n    labs(title = \"Effective Number of Parties in Sub-Saharan African Countries\",\n         subtitle = paste0(\"ENPP: N = \", sum(!is.na(enp$enpp)), \n                           \"\\nENEP: N = \", sum(!is.na(enp$enep)), \n                           \" of \", \n                           length(enp$enpp), \n                           \" possible countries in the sample.\\n\"),\n         caption = \"\\nsource: V-Party, Coppedge et al. (2020)\",\n         fill = \"Index\",\n         color = \"Index\",\n         x = \"\\nEffective Number of Parties\",\n         y = \"Density\\n\")\n```\n\n::: {.cell-output-display}\n![](data_building_files/figure-pdf/modify enp data-1.pdf)\n:::\n:::\n\n\nThe ENPP index is calculated for each country-year pair in the sample, but for the ENEP, there are a multiple missing values.\n\nData on oil rents as a percentage of GDP comes from the World Bank \\parencite{world_bank_world_2020}. I construct a dummy variable for the presence of oil rents in a country-year pair.\n\n::: {.cell}\n\n```{.r .cell-code}\noil <- wb_oil |> \n  pivot_longer(cols = -c(\"Country Name\", \"Country Code\", \"Indicator Name\", \n                         \"Indicator Code\"), \n               names_to = \"year\", values_to = \"oil_rent_perc_gdp\") |> \n  mutate(ccodecow = countryname(`Country Name`, \n                                destination = \"cown\"),\n         oil_rent_dummy = if_else(oil_rent_perc_gdp != 0, 1, 0)) |> \n  filter(str_c(ccodecow, year, sep = \"_\") %in% cy) \n```\n:::\n\n\n\n\\printbibliography\n\n",
    "supporting": [
      "data_building_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}