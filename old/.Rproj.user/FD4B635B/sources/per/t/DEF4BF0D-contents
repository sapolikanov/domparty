
getwd()

### This is a work-in-progress document ###

# V-dem Full Dataset #

# Indices and measurements: 
# 1. Number of relevant parties as coded by van Eerd
# 2. Freedom House political rights and civil liberties scores
# 3. ENPP
# 4. ELF
# 5. PSI

install.packages("dplyr")
devtools::install_github("albuja/electoral")
install.packages("foreign")
install.packages("haven")


library(electoral)
library(dplyr)
library(foreign)
library(haven)
library(tidyr)
library(rlang)


v_party <- readRDS('V-Dem-CPD-Party-V1.rds')
v_dem <- readRDS('V-Dem-CY-Full+Others-v10.rds')
numparties <- read.csv('numparties.csv')
fh <- read.csv('freedom_house.csv')
EPR <- read.csv('EPR.csv')
col_legacy <- read_dta('Colonal/colony-dummy.dta')
rules <- read_dta('DPI2020/DPI2020.dta')
oil <- read.csv('WorldBank_/API_NY.GDP.PETR.RT.ZS_DS2_en_csv_v2_2446738.csv')
edu <- read.csv('Education index.csv')
ethnic_dom <- read_dta('maintaining_ethnic_dominance.dta')

# Dependent variable

enp <- v_party %>% 
  
  select(e_regionpol_6C, country_name, country_id, pf_party_id, year, v2panumbseat, COWcode) %>% 
  filter(e_regionpol_6C == 4, !is.na(v2panumbseat),year %in% c("2013","2014","2015", "2016", "2017", "2018"))%>% 
    group_by(country_id)%>%
      slice_max(year)%>%
        mutate(number_of_parties = length(country_id)) %>%
        mutate(ENPP = electoral::enp(v2panumbseat))
  
fh_filtered <- fh %>%
  
  filter(Region == "SSA")%>%
  select(country_name = Country.Territory, year = Edition, status = Status, pr_rating = PR.Rating, cl_rating = CL.Rating)
  
  aut_dom <- merge(numparties, fh_filtered, by = c( 'country_name','year'), all.x = TRUE, all.y = FALSE)

aut_dom_df <- aut_dom %>%
  
  mutate(aut_dom = if_else(pr_rating >= 6, if_else(cl_rating >= 6, 1, 0),0))

aut_dom_df$dem_dom <- c("0", "0", "1", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "1", "0", "1", "1", "0", "0")

as.numeric(c ("year", "country_id", "ccodecow", "Number.of.relevant.parties", "pr_rating", "cl_rating"))
partyreg <- aut_dom_df %>%
  
  select(country_name, year, ccodecow, num_parties = Number.of.relevant.parties, aut_dom, dem_dom)%>%
  mutate(partyreg = if_else(aut_dom == 1, 1, if_else(dem_dom == 1,2,0),0))

# ELF
  ELF_df1 <- ELF_df %>% 
    group_by(ccodecow)%>%
    mutate(statuss = ifelse(status[1] == 1, 1, 0))%>%
    summarise(statuss)
    
  ELF_df$status <- recode(ELF_df$status, "c('DISCRIMINATED', 'IRRELEVANT', 'POWERLESS', 'DOMINANT')= '1';c('JUNIOR PARTNER', 'SENIOR PARTNER')= '0'")
  ELF_df$status <- if_else(ELF_df$status == 1, 1, 0)
  ELF_df <- merge(partyreg, EPR, by.x = 'ccodecow', by.y = 'gwid',all.x = TRUE, all.y = FALSE) %>%
    group_by(statename, ccodecow)%>%
      select(statename,ccodecow, status, year, from, to, size)%>%
      filter(if_else(year == 2018, to == 2017, year >= from & year <= to))%>%
      mutate(ELF = as.numeric(1 - sum(size^2)))
  
# Ethnic dominance
  
  etn_dom <- merge(partyreg, ethnic_dom, by.x = c('ccodecow'), by.y = c('CCODE'),all.x = TRUE, all.y = FALSE)%>%
    dplyr::select(ccodecow, year, CNAME, EXCL, YEAR)%>%
    group_by(ccodecow)%>%
    summarise(max(YEAR))

# PSI and incumbency
  
  PSI_df <- merge(partyreg,v_dem, by.x = 'ccodecow',by.y = 'COWcode', all.x = TRUE, all.y = FALSE)%>%
    filter(if_else(year.x == 2013,year.y == 2014,year.x == year.y))%>%
    select(ccodecow, country_name.x, year.x, v2xps_party, country_text_id)
  
  inc_df <- merge(partyreg,v_dem, by.x = c('ccodecow','year'),by.y = c('COWcode','year'), all.x = TRUE, all.y = FALSE)%>%
    select(ccodecow, v2eltvrig)
  
# Colonial Legacy
  
  col_legacy1 <- merge(partyreg, col_legacy, by.x = 'ccodecow', by.y = 'rCCODE', all.x = TRUE, all.y = FALSE)
  
  col_legacy_df <- col_legacy1 %>%
    group_by(ccodecow)%>%
    dplyr::select(ccodecow, rCNAME, dCNAME, colony)%>%
    mutate(col_legacy = if_else(colony == 1, if_else(dCNAME == 'UK', 1, if_else(dCNAME == 'FRN', 2, 3)),0))%>%
    summarize(max(col_legacy))
  
# Electoral rules
  
  rules <- as.data.frame(rules)
  rules1 <- merge(rules, PSI_df, by.x = 'ifs', by.y = 'country_text_id', all.x = TRUE, all.y = FALSE)%>%
    select(ifs, year, countryname, housesys, ccodecow)
  
  rules_df <- merge(partyreg, rules1, by = c('ccodecow','year'), all.x = TRUE, all.y = FALSE)%>%
    select(ifs, ccodecow, housesys, year, country_name)%>%
    mutate_all(~replace(., is.na(.), 0))
    rules_df[rules_df$ifs== 'GIN', "housesys"] <- 0
    rules_df[rules_df$ifs== 'SDN', "housesys"] <- 0
    str(rules_df)
      
# Modify original datasets into controls columns
  
  # Datasets: 
  # Democracy - v-dem's polyarcy index
  # Oil Wealth - World Bank's Oil rents (% of GDP)

  # Democracy
  
  dem_df <- merge(v_dem, partyreg, by.x = c('COWcode', 'year'), by.y = c('ccodecow', 'year'), all.y = TRUE, all.x = FALSE) %>%
    select(ccodecow = COWcode, year, country_name = country_name.x, v2x_polyarchy, country_text_id)
  
  # Oil Wealth
  
  oil_df <- merge(dem_df, oil, by.x = 'country_text_id', by.y = 'Country.Code') %>%
    select(- Country.Name, - Indicator.Name, - Indicator.Code, - v2x_polyarchy)%>%
    gather(key = key, value = oil, -c('country_text_id', 'country_name', 'ccodecow', 'year'), na.rm = TRUE)
    oil_df$key <- gsub("X","",as.character(oil_df$key))
    
  oil_df <- oil_df %>%
    filter(key == year)

  # Education Index
  
  edu_df <- merge(oil_df, edu, by = 'country_name') %>%
  gather(key = year, value = edu,-c('country_text_id', 'country_name', 'ccodecow', 'year', 'key', 'oil','HDI.Rank'), na.rm = TRUE)
  edu_df$year <- gsub("X","", as.character(edu_df$year))
  
  edu_df <- edu_df %>%
    filter(key == year)
  
  # Master dataset
  
  master_d <- Reduce(function(x,y) merge(x = x, y = y, by = "ccodecow", all.x = TRUE, all.y = FALSE), 
         list(partyreg, ELF_df, PSI_df, col_legacy_df, rules_df, dem_df, edu_df, oil_df))
  
  master_d_final <- master_d %>%
  subset(., select = which(!duplicated(names(.))))%>%
  select(ccodecow, country_name.x, country_text_id.x, year.x, partyreg, ELF, PSI = v2xps_party, housesys, dem = v2x_polyarchy, oil.x, edu, )%>%
  distinct()%>%
  mutate_all(~replace(., is.na(.), 0))
  master_df_final[master_df_final$ccodecow== 403, "ELF"] <- 0.189797
  master_df_final[master_df_final$ccodecow== 591, "ELF"] <- 0.3028665
  master_df_final[master_df_final$ccodecow== 402, "ELF"] <- 0.4949435

  saveRDS(master_df_final, 'df.rds')
  
  

  

  


